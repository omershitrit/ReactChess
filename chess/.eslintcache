[{"C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\App.js":"1","C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\index.js":"2","C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\board.js":"3","C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\tile.js":"4","C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\pieces\\pawn.js":"5","C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\pieces\\knight.js":"6","C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\pieces\\queen.js":"7","C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\pieces\\bishop.js":"8","C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\pieces\\king.js":"9","C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\pieces\\rook.js":"10","C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\homePage.js":"11","C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\AI\\miniMax.js":"12","C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\pieces\\piece.js":"13","C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\pieces\\movesFactory.js":"14"},{"size":871,"mtime":1611257356612,"results":"15","hashOfConfig":"16"},{"size":169,"mtime":1610385965542,"results":"17","hashOfConfig":"16"},{"size":8009,"mtime":1611260614558,"results":"18","hashOfConfig":"16"},{"size":1398,"mtime":1611233878172,"results":"19","hashOfConfig":"16"},{"size":2053,"mtime":1611184485303,"results":"20","hashOfConfig":"16"},{"size":2147,"mtime":1611182785936,"results":"21","hashOfConfig":"16"},{"size":2112,"mtime":1611182794277,"results":"22","hashOfConfig":"16"},{"size":1800,"mtime":1611182850578,"results":"23","hashOfConfig":"16"},{"size":1876,"mtime":1611182784117,"results":"24","hashOfConfig":"16"},{"size":1877,"mtime":1611218398384,"results":"25","hashOfConfig":"16"},{"size":700,"mtime":1611163588824,"results":"26","hashOfConfig":"16"},{"size":3704,"mtime":1611261013226,"results":"27","hashOfConfig":"16"},{"size":0,"mtime":1611221185892,"results":"28","hashOfConfig":"16"},{"size":5513,"mtime":1611261230495,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13bqd6r",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\App.js",[],"C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\index.js",[],["60","61"],"C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\board.js",["62"],"import React from 'react';\r\nimport Tile from './tile.js';\r\n//import Piece from './pieces/piece.js';\r\nimport executeAIMove from '../AI/miniMax.js';\r\nimport calculatePossibleMoves from './pieces/movesFactory.js';\r\nimport './board.css';\r\n\r\nconst NUM_TILES = 64;\r\n\r\nexport default class Board extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tiles: [],\r\n            whitePlayer: \"player\",\r\n            whiteDirection: -1,\r\n            blackPlayer: props.mode,\r\n            turn: \"W\",\r\n            selectedTile: undefined,\r\n            targetTiles: []\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => this.initiateBoard();\r\n\r\n    generateBoard = tiles => {\r\n        let res = [];\r\n        const ROW_SIZE = 8;\r\n        for (let i = 0; i < NUM_TILES; i += ROW_SIZE) {\r\n            let row = tiles.slice(i, i + ROW_SIZE);\r\n            res.push(row);\r\n        }\r\n        return res;\r\n    }\r\n\r\n    highlightTiles = (positions) => {\r\n        let arr = this.state.tiles;\r\n        this.state.targetTiles.forEach(pos => arr[pos].highlight = false);\r\n        positions.forEach(pos => arr[pos].highlight = !arr[pos].highlight);\r\n        this.setState({ tiles: arr, targetTiles: positions });\r\n    }\r\n\r\n    tileClicked = (index) => {\r\n        const tiles = this.state.tiles;\r\n        if (this.state.turn === tiles[index].color) {\r\n            const possibleMoves = calculatePossibleMoves(index, tiles)\r\n            //console.log(\"Moves found: \", possibleMoves);\r\n            this.highlightTiles(possibleMoves)\r\n            this.setState({ selectedTile: index });\r\n        } else if (this.state.targetTiles.some(t => t === index)) {\r\n            this.executeMove(this.state.selectedTile, index);\r\n        }\r\n    }\r\n\r\n    executeMove = (src, dst) => {\r\n        let tiles = this.state.tiles;\r\n        //console.log(\"Blacks: \", this.state.tiles.filter(t => t.color === \"B\"))\r\n        //console.log(\"Whites: \", this.state.tiles.filter(t => t.color === \"W\"))\r\n        if (tiles[dst].occupied) {\r\n            if (tiles[dst].piece === \"K\") {\r\n                const color = tiles[dst].piece.color === \"W\" ? \"Black\" : \"White\";\r\n                alert(color + \" wins!\")\r\n            }\r\n\r\n            // add some bars in the sides showing the eaten pieces\r\n        }\r\n        if (tiles[dst].piece !== undefined) {\r\n            //console.log(this.convertToPoint(tiles[dst].piece));\r\n        }\r\n        // console.log(\"src: \", src)\r\n        // console.log(\"dst: \", dst)\r\n        // console.log(\"tiles[src]: \", tiles[src])\r\n        // console.log(\"tiles[dst]: \", tiles[dst])\r\n        tiles[dst].piece = tiles[src].piece;\r\n        tiles[dst].highlight = false;\r\n        tiles[dst].color = this.state.turn;\r\n        tiles[src].piece = undefined;\r\n        tiles[src].color = undefined;\r\n        //console.log(\"tiles[src]: \", tiles[src])\r\n        //console.log(\"tiles[dst]: \", tiles[dst])\r\n        // setting the firstMove flag to false so they wont be able to castle (Rook & King) or move major stepd (Pawn)\r\n        if (tiles[dst].piece === \"P\" || tiles[dst].piece === \"R\" || tiles[dst].piece === \"K\") {\r\n            tiles[dst].firstMove = false;\r\n        }\r\n        //console.log(\"Blacks: \", this.state.tiles.filter(t => t.color === \"B\"))\r\n        // console.log(\"Whites: \", this.state.tiles.filter(t => t.color === \"W\"))\r\n        this.state.targetTiles.forEach(pos => tiles[pos].highlight = false);\r\n        this.setState({ tiles: tiles, selectedTile: undefined, targetTiles: [], turn: this.state.turn === \"W\" ? \"B\" : \"W\" }, () => {\r\n\r\n            if (this.state.blackPlayer === \"computer\" && this.state.turn === \"B\" && this.state.tiles.length > 0) {\r\n                //console.log(\"Blacks: \", this.state.tiles.filter(t => t.color === \"B\"))\r\n                //console.log(\"Whites: \", this.state.tiles.filter(t => t.color === \"W\"))\r\n                console.log(\"Blacks: \", this.state.tiles.filter(t => t.color === \"B\"))\r\n                const { src, dst } = executeAIMove(this.state.tiles, this.props.difficulty);\r\n                console.log(\"Blacks: \", this.state.tiles.filter(t => t.color === \"B\"))\r\n                //console.log(\"Move from: \" + src + \" to: \" + dst)\r\n                this.executeMove(src, dst);\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    convertToPoint = piece => {\r\n        switch (piece) {\r\n            case \"P\":\r\n                return 100;\r\n            case \"R\":\r\n                return 300;\r\n            case \"N\":\r\n                return 250;\r\n            case \"B\":\r\n                return 300;\r\n            case \"Q\":\r\n                return 1000;\r\n            case \"K\":\r\n                return 10000;\r\n        }\r\n    }\r\n\r\n    initiateBoard = () => {\r\n        let arr = [];\r\n        //console.log(\"im here!\")\r\n        arr.push({ piece: \"R\", color: \"B\", highlight: false, firstMove: true });\r\n        arr.push({ piece: \"N\", color: \"B\", highlight: false });\r\n        arr.push({ piece: \"B\", color: \"B\", highlight: false });\r\n        arr.push({ piece: \"Q\", color: \"B\", highlight: false });\r\n        arr.push({ piece: \"K\", color: \"B\", highlight: false, firstMove: true });\r\n        arr.push({ piece: \"B\", color: \"B\", highlight: false });\r\n        arr.push({ piece: \"N\", color: \"B\", highlight: false });\r\n        arr.push({ piece: \"R\", color: \"B\", highlight: false, firstMove: true });\r\n\r\n        arr.push({ piece: \"P\", color: \"B\", highlight: false, firstMove: true });\r\n        arr.push({ piece: \"P\", color: \"B\", highlight: false, firstMove: true });\r\n        arr.push({ piece: \"P\", color: \"B\", highlight: false, firstMove: true });\r\n        arr.push({ piece: \"P\", color: \"B\", highlight: false, firstMove: true });\r\n        arr.push({ piece: \"P\", color: \"B\", highlight: false, firstMove: true });\r\n        arr.push({ piece: \"P\", color: \"B\", highlight: false, firstMove: true });\r\n        arr.push({ piece: \"P\", color: \"B\", highlight: false, firstMove: true });\r\n        arr.push({ piece: \"P\", color: \"B\", highlight: false, firstMove: true });\r\n\r\n        // fill in empty tiles\r\n        for (let i = 0; i < 32; ++i) {\r\n            arr.push({ piece: undefined, color: undefined, occupied: false, });\r\n        }\r\n\r\n        arr.push({ piece: \"P\", color: \"W\", highlight: false, firstMove: true });\r\n        arr.push({ piece: \"P\", color: \"W\", highlight: false, firstMove: true });\r\n        arr.push({ piece: \"P\", color: \"W\", highlight: false, firstMove: true });\r\n        arr.push({ piece: \"P\", color: \"W\", highlight: false, firstMove: true });\r\n        arr.push({ piece: \"P\", color: \"W\", highlight: false, firstMove: true });\r\n        arr.push({ piece: \"P\", color: \"W\", highlight: false, firstMove: true });\r\n        arr.push({ piece: \"P\", color: \"W\", highlight: false, firstMove: true });\r\n        arr.push({ piece: \"P\", color: \"W\", highlight: false, firstMove: true });\r\n\r\n        arr.push({ piece: \"R\", color: \"W\", highlight: false, firstMove: true });\r\n        arr.push({ piece: \"N\", color: \"W\", highlight: false });\r\n        arr.push({ piece: \"B\", color: \"W\", highlight: false });\r\n        arr.push({ piece: \"Q\", color: \"W\", highlight: false });\r\n        arr.push({ piece: \"K\", color: \"W\", highlight: false, firstMove: true });\r\n        arr.push({ piece: \"B\", color: \"W\", highlight: false });\r\n        arr.push({ piece: \"N\", color: \"W\", highlight: false });\r\n        arr.push({ piece: \"R\", color: \"W\", highlight: false, firstMove: true });\r\n        this.setState({ tiles: arr });\r\n    }\r\n\r\n    showTiles = () => {\r\n        //console.log(\"Blacks: \", this.state.tiles.filter(t => t.color === \"B\"))\r\n        const tiles = this.state.tiles.map((t, i) => <Tile key={i} index={i} row={Math.floor(i / 8)} piece={t.piece} color={t.color} highlight={t.highlight} tileClicked={this.tileClicked} />);\r\n        return this.generateBoard(tiles).map((row, index) => <div key={index} className=\"row\">{row}</div>)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"board\">\r\n                {this.showTiles()}\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\tile.js",["63"],"C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\pieces\\pawn.js",[],"C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\pieces\\knight.js",[],"C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\pieces\\queen.js",[],"C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\pieces\\bishop.js",[],"C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\pieces\\king.js",[],"C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\pieces\\rook.js",[],"C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\homePage.js",[],"C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\AI\\miniMax.js",["64","65","66","67","68","69","70"],"C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\pieces\\piece.js",[],"C:\\Users\\Omer Shitrit\\Desktop\\Projects\\chess\\src\\components\\pieces\\movesFactory.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":106,"column":9,"nodeType":"77","messageId":"78","endLine":119,"endColumn":10},{"ruleId":"79","severity":1,"message":"80","line":39,"column":35,"nodeType":"81","messageId":"82","endLine":39,"endColumn":37},{"ruleId":"83","severity":1,"message":"84","line":3,"column":7,"nodeType":"85","messageId":"86","endLine":3,"endColumn":18},{"ruleId":"83","severity":1,"message":"87","line":4,"column":7,"nodeType":"85","messageId":"86","endLine":4,"endColumn":23},{"ruleId":"83","severity":1,"message":"88","line":5,"column":7,"nodeType":"85","messageId":"86","endLine":5,"endColumn":18},{"ruleId":"83","severity":1,"message":"89","line":6,"column":7,"nodeType":"85","messageId":"86","endLine":6,"endColumn":20},{"ruleId":"75","severity":1,"message":"76","line":9,"column":5,"nodeType":"77","messageId":"78","endLine":22,"endColumn":6},{"ruleId":"79","severity":1,"message":"90","line":80,"column":15,"nodeType":"81","messageId":"82","endLine":80,"endColumn":17},{"ruleId":"79","severity":1,"message":"90","line":97,"column":15,"nodeType":"81","messageId":"82","endLine":97,"endColumn":17},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'CHECK_BONUS' is assigned a value but never used.","Identifier","unusedVar","'CHECK_MATE_BONUS' is assigned a value but never used.","'DEPTH_BONUS' is assigned a value but never used.","'CASTLED_BONUS' is assigned a value but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]